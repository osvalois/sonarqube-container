# Use SonarQube Community Edition - Latest stable version
# Optimized for Railway deployment
FROM sonarqube:community

# Build arguments for metadata
ARG BUILD_DATE
ARG BUILD_VERSION
ARG VCS_REF

# Switch to root for installation
USER root

# Metadata following OCI Image Specification
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.url="https://github.com/osvalois/sonarqube-container"
LABEL org.opencontainers.image.source="https://github.com/osvalois/sonarqube-container"
LABEL org.opencontainers.image.version="${BUILD_VERSION}"
LABEL org.opencontainers.image.revision="${VCS_REF}"
LABEL org.opencontainers.image.vendor="Oscar Valois"
LABEL org.opencontainers.image.title="SonarQube DevSecOps 2025 for Railway"
LABEL org.opencontainers.image.description="SonarQube 2025 Latest optimized for Railway deployment"
LABEL org.opencontainers.image.licenses="MIT"
LABEL maintainer="Oscar Valois <osvaloismtz@gmail.com>"

# Install dependencies with security updates
RUN set -eux; \
    apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        curl \
        ca-certificates \
        gnupg \
        lsb-release \
        procps && \
    rm -rf /var/lib/apt/lists/*

# Create all required directories and ensure they have proper permissions
RUN mkdir -p /opt/sonarqube/data /opt/sonarqube/extensions \
    /opt/sonarqube/logs /opt/sonarqube/temp && \
    chmod -R 777 /opt/sonarqube/data /opt/sonarqube/extensions \
    /opt/sonarqube/logs /opt/sonarqube/temp

# Create SonarQube configuration for Railway
COPY start-railway.sh /usr/local/bin/start-railway.sh
RUN chmod +x /usr/local/bin/start-railway.sh

# Custom configuration
RUN echo "sonar.web.host=0.0.0.0" > /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.web.port=9000" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.search.javaOpts=-Xms256m -Xmx512m -XX:+UseSerialGC -Des.enforce.bootstrap.checks=false" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.ce.javaOpts=-Xmx512m -Xms256m -XX:+UseSerialGC" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.web.javaOpts=-Xmx512m -Xms256m -XX:+UseSerialGC" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.telemetry.enable=false" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.updatecenter.activate=false" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.path.data=/opt/sonarqube/data" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.path.logs=/opt/sonarqube/logs" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.path.temp=/opt/sonarqube/temp" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.search.httpPort=9001" >> /opt/sonarqube/conf/sonar.properties && \
    echo "sonar.ce.workerCount=4" >> /opt/sonarqube/conf/sonar.properties

# Create Elasticsearch configuration directory and file
RUN mkdir -p /opt/sonarqube/temp/conf/es && \
    echo "node.name: sonarqube" > /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "cluster.name: sonarqube" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "discovery.type: single-node" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "bootstrap.system_call_filter: false" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "cluster.routing.allocation.disk.threshold_enabled: false" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "discovery.seed_hosts: 127.0.0.1" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "network.host: 127.0.0.1" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "transport.host: 127.0.0.1" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "http.host: 127.0.0.1" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "xpack.security.enabled: false" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    echo "action.auto_create_index: false" >> /opt/sonarqube/temp/conf/es/elasticsearch.yml && \
    chmod -R 777 /opt/sonarqube/temp/conf/es

# Default environment variables matching Railway configuration from railway.toml
ENV PORT="9000"
ENV RUN_AS_ROOT="true"
ENV SONAR_ES_BOOTSTRAP_CHECKS_DISABLE="true"
ENV SONAR_TELEMETRY_ENABLE="false"
ENV SONAR_UPDATECENTER_ACTIVATE="false"
ENV SONAR_WEB_HOST="0.0.0.0"
ENV SONAR_WEB_PORT="9000"
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=65.0"
ENV JAVA_TOOL_OPTIONS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=65.0"
ENV SONAR_WEB_JAVAOPTS="-Xmx512m -Xms256m -XX:+UseSerialGC"
ENV SONAR_CE_JAVAOPTS="-Xmx512m -Xms256m -XX:+UseSerialGC"
ENV SONAR_SEARCH_JAVAOPTS="-Xms256m -Xmx512m -XX:+UseSerialGC -Des.enforce.bootstrap.checks=false -Des.bootstrap.system_call_filter=false -Des.bootstrap.checks=false"
ENV ES_JAVA_OPTS="-Xms256m -Xmx512m -XX:+UseSerialGC -Des.enforce.bootstrap.checks=false -Des.bootstrap.system_call_filter=false -Des.bootstrap.checks=false"
ENV SONAR_SEARCH_JAVA_ADDITIONAL_OPTS="-Des.enforce.bootstrap.checks=false"

# Expose web port
EXPOSE 9000

# Use Railway-optimized entrypoint
ENTRYPOINT ["/usr/local/bin/start-railway.sh"]